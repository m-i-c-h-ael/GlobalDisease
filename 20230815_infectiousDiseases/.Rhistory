mean_y= mean(y),
sd_y= sd(y)
)
# visualize
data= data.frame(dataList[c("y","j")])
data$j= as.factor(data$j)
ggplot(data=data,aes(x=j,y=y))+
geom_jitter(width=.1)+
coord_cartesian(ylim=c(0,max(data$y)))
# run MCMC
jagMod= jags.model(file=textConnection(modStr),data=dataList,n.chains=3)
# Groups of categorical variable with metric measurements (similar to
#ANOVA / ANCOVA)
rm(list=ls())
graphics.off()
cat('\014')
library('rjags')
library('tidyverse')
modStr= 'model{
#sd_y= sd(y[1:Ntot])
#mean_y= mean(y[1:Ntot])
for(i in 1:Ntot){ y[i] ~ dnorm(a0+a[j[i]], 1/sig_y^2) }
sig_y ~ dunif(sd_y/100, sd_y*10)
a0 ~ dnorm(mean_y,1/(5*sd_y)^2)
for(j in 1:NxLvl) { a[j] ~ dnorm(0,1/sd_y^2) }
mu= mean(a[1:NxLvl])
b0= a0 + mu
b[1:NxLvl]= a[1:NxLvl]-mu
}
'
means= c(3,3,3,5)
NperGroup= 7
set.seed(22082023)
y= c( rnorm(n= NperGroup,mean= means[1],sd=1),rnorm(n= NperGroup,mean= means[2],sd=1),
rnorm(n= NperGroup,mean= means[3],sd=1),rnorm(n= NperGroup,mean= means[4],sd=1) )
dataList= list(
y= y,
j= c( rep(1,NperGroup),rep(2,NperGroup),rep(3,NperGroup),rep(4,NperGroup) ),
Ntot= length(means)*NperGroup,
NxLvl= length(means),
mean_y= mean(y),
sd_y= sd(y)
)
# visualize
data= data.frame(dataList[c("y","j")])
data$j= as.factor(data$j)
ggplot(data=data,aes(x=j,y=y))+
geom_jitter(width=.1)+
coord_cartesian(ylim=c(0,max(data$y)))
# run MCMC
jagMod= jags.model(file=textConnection(modStr),data=dataList,n.chains=3)
cS= coda.samples(model=jagMod,variable.names=c('b0','b','sig_y'))
cS= coda.samples(model=jagMod,variable.names=c('b0','b','sig_y'),n.iter=10000)
DF1= cS[[1]]
DF2= cS[[2]]
DF3= cS[[3]]
for(i in 1:dim(DF1)[2]){
plot(DF1[,i],type='l',ylab=colnames(DF1)[i],
main=colnames(DF1)[i])
lines(DF2[,i],col='blue')
lines(DF3[,i],col='green')
plot(density(DF1[,i]),main=colnames(DF1)[i])
lines(density(DF2[,i]),col='blue')
lines(density(DF3[,i]),col='green')
}
head(DF1)
head(DF2)
i
i=4
plot(DF1[,i],type='l',ylab=colnames(DF1)[i],
main=colnames(DF1)[i])
graphics.off()
plot(DF1[,i],type='l',ylab=colnames(DF1)[i],
main=colnames(DF1)[i])
plot.new()
plot(DF1[,i],type='l',ylab=colnames(DF1)[i],
main=colnames(DF1)[i])
DF1= data.frame(cS[[1]])
DF2= data.frame(cS[[2]])
DF3= data.frame(cS[[3]])
for(i in 1:dim(DF1)[2]){
plot(DF1[,i],type='l',ylab=colnames(DF1)[i],
main=colnames(DF1)[i])
lines(DF2[,i],col='blue')
lines(DF3[,i],col='green')
plot(density(DF1[,i]),main=colnames(DF1)[i])
lines(density(DF2[,i]),col='blue')
lines(density(DF3[,i]),col='green')
}
#alternative model: deviance SD is estimated
modStr2= 'model{
#sd_y= sd(y[1:Ntot])
#mean_y= mean(y[1:Ntot])
for(i in 1:Ntot){ y[i] ~ dnorm(a0+a[j[i]], 1/sig_y^2) }
sig_y ~ dunif(sd_y/100, sd_y*10)
a0 ~ dnorm(mean_y,1/(5*sd_y)^2)
for(j in 1:NxLvl) { a[j] ~ dnorm(0,sig_a) }
sig_a ~ dgamma(gamma_sh, gamma_ra)
mu= mean(a[1:NxLvl])
b0= a0 + mu
b[1:NxLvl]= a[1:NxLvl]-mu
}
'
dataList= list(
y= y,
j= c( rep(1,NperGroup),rep(2,NperGroup),rep(3,NperGroup),rep(4,NperGroup) ),
Ntot= length(means)*NperGroup,
NxLvl= length(means),
mean_y= mean(y),
sd_y= sd(y),
gamma_sh= gammaShRaFromModeSD(mode= sd(y)/2, sd= sd(y)*2),
gamma_ra= gammaShRaFromModeSD(mode= sd(y)/2, sd= sd(y)*2)
)
gammaShRaFromModeSD = function( mode , sd ) {
if ( mode <=0 ) stop("mode must be > 0")
if ( sd <=0 ) stop("sd must be > 0")
rate = ( mode + sqrt( mode^2 + 4 * sd^2 ) ) / ( 2 * sd^2 )
shape = 1 + mode * rate
return( list( shape=shape , rate=rate ) )
}
dataList= list(
y= y,
j= c( rep(1,NperGroup),rep(2,NperGroup),rep(3,NperGroup),rep(4,NperGroup) ),
Ntot= length(means)*NperGroup,
NxLvl= length(means),
mean_y= mean(y),
sd_y= sd(y),
gamma_sh= gammaShRaFromModeSD(mode= sd(y)/2, sd= sd(y)*2),
gamma_ra= gammaShRaFromModeSD(mode= sd(y)/2, sd= sd(y)*2)
)
jagMod= jags.model(file=textConnection(modStr2),data=dataList,n.chains=3)
gammaShRaFromModeSD(mode= sd(y)/2, sd= sd(y)*2)
dataList= list(
y= y,
j= c( rep(1,NperGroup),rep(2,NperGroup),rep(3,NperGroup),rep(4,NperGroup) ),
Ntot= length(means)*NperGroup,
NxLvl= length(means),
mean_y= mean(y),
sd_y= sd(y),
gamma_sh= gammaShRaFromModeSD(mode= sd(y)/2, sd= sd(y)*2)[1],
gamma_ra= gammaShRaFromModeSD(mode= sd(y)/2, sd= sd(y)*2)[2]
)
jagMod= jags.model(file=textConnection(modStr2),data=dataList,n.chains=3)
cS= coda.samples(model=jagMod,variable.names=c('b0','b','sig_y','sig_a'),n.iter=10000)
DF1= data.frame(cS[[1]])
DF2= data.frame(cS[[2]])
DF3= data.frame(cS[[3]])
for(i in 1:dim(DF1)[2]){
plot(DF1[,i],type='l',ylab=colnames(DF1)[i],
main=colnames(DF1)[i])
lines(DF2[,i],col='blue')
lines(DF3[,i],col='green')
plot(density(DF1[,i]),main=colnames(DF1)[i])
lines(density(DF2[,i]),col='blue')
lines(density(DF3[,i]),col='green')
}
knitr::opts_chunk$set(echo = TRUE)
cat('\014')
file1= read.csv('./IHME-GBD_2019_DATA-18eb38e3-1/IHME-GBD_2019_DATA-18eb38e3-1.csv')
head(file1)  #contains 32 causes
data1= file1[file1$metric=='Percent',]
data1$year= data1$year-1990
data1$disFac= as.numeric(as.factor(data1$cause))
dim(data1)
summary(data1$val)
summary(data1$year)
head(data1$year)
head(data1)
head(file1)
dim(data1)
redData= data1[data1$sex=='Male',]
redData= data1[data1$sex=='Male',]
redData= redData[redData$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
redData$disFac= as.numeric(as.factor(redData$cause)) #need to ensure it starts at 1
#redData= redData[redData$location %in% c('East Asia','Central Europe','Southern Sub-Saharan  #Africa'),]
redData= redData[redData$age == 'All ages',]
dim(redData)
apply(redData,2,function(x){sum(is.na(x))})  #missing value check
dim(redData)
mod1Str='
model{
for(i in 1:Ntotal){   #loop over all observations
pc[i] ~ dt(b0[d[i]] + b1[d[i]]*year[i], sigma, nu )   #coefficients specific to disease
}
for(j in 1:Ndis){
b0[j] ~ dunif(1/1000,1000)
b1[j] ~ dnorm(0, 2^2)   #sd= 1/2
}
nuMin1 ~ dexp(1/29.0)
nu= nuMin1 +1
sigma~ dunif(0,1)
}'
# data1List= list(
#   Ntotal= dim(data1)[1],
#   Ndis= length(unique(data1$cause)),
#   pc= data1$val,  #percentage
#   d= data1$disFac,
#   year= data1$year
# )
redData1List= list(
Ntotal= dim(redData)[1],
Ndis= length(unique(redData$cause)),
pc= redData$val,  #percentage
d= redData$disFac,
year= redData$year
)
jags1= jags.model(file=textConnection(mod1Str),data=redData1List,n.chains=3)
cS1= coda.samples(model=jags1,variable.names=c('b0','b1','sigma','nu'),n.iter=10000)
for(i in 1:length(varnames(cS1))){
diagMCMC(codaObject= cS1,parName=varnames(cS1)[i]  )
}
rm(list=ls())
cat('\014')
graphics.off()
setwd('H:/My Drive/20230815_GlobBurdDisease/20230815_infectiousDiseases')
library('rjags')
#source('H:/My Drive/learning/20230220_BayesianStatistics/20230504_BayesianDogsBook/DBDA2Eprogram #s/DBDA2E-utilities.R')
source('../DBDA2E-utilities_mod.R')  #modified to fit markdown
for(i in 1:length(varnames(cS1))){
diagMCMC(codaObject= cS1,parName=varnames(cS1)[i]  )
}
cS1= coda.samples(model=jags1,variable.names=c('b0','b1','sigma','nu'),n.iter=10000)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
cat('\014')
graphics.off()
setwd('H:/My Drive/20230815_GlobBurdDisease/20230815_infectiousDiseases')
library('rjags')
#source('H:/My Drive/learning/20230220_BayesianStatistics/20230504_BayesianDogsBook/DBDA2Eprogram #s/DBDA2E-utilities.R')
source('../DBDA2E-utilities_mod.R')  #modified to fit markdown
file1= read.csv('./IHME-GBD_2019_DATA-18eb38e3-1/IHME-GBD_2019_DATA-18eb38e3-1.csv')
head(file1)  #contains 32 causes
data1= file1[file1$metric=='Percent',]
data1$year= data1$year-1990
data1$disFac= as.numeric(as.factor(data1$cause))
dim(data1)
summary(data1$val)
summary(data1$year)
redData= data1[data1$sex=='Male',]
redData= redData[redData$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
redData$disFac= as.numeric(as.factor(redData$cause)) #need to ensure it starts at 1
#redData= redData[redData$location %in% c('East Asia','Central Europe','Southern Sub-Saharan  #Africa'),]
redData= redData[redData$age == 'All ages',]
dim(redData)
apply(redData,2,function(x){sum(is.na(x))})  #missing value check
mod1Str='
model{
for(i in 1:Ntotal){   #loop over all observations
pc[i] ~ dt(b0[d[i]] + b1[d[i]]*year[i], sigma, nu )   #coefficients specific to disease
}
for(j in 1:Ndis){
b0[j] ~ dunif(1/1000,1000)
b1[j] ~ dnorm(0, 2^2)   #sd= 1/2
}
nuMin1 ~ dexp(1/29.0)
nu= nuMin1 +1
sigma~ dunif(0,1)
}'
# data1List= list(
#   Ntotal= dim(data1)[1],
#   Ndis= length(unique(data1$cause)),
#   pc= data1$val,  #percentage
#   d= data1$disFac,
#   year= data1$year
# )
redData1List= list(
Ntotal= dim(redData)[1],
Ndis= length(unique(redData$cause)),
pc= redData$val,  #percentage
d= redData$disFac,
year= redData$year
)
jags1= jags.model(file=textConnection(mod1Str),data=redData1List,n.chains=3)
cS1= coda.samples(model=jags1,variable.names=c('b0','b1','sigma','nu'),n.iter=10000)
for(i in 1:length(varnames(cS1))){
diagMCMC(codaObject= cS1,parName=varnames(cS1)[i]  )
}
head(data1)
ggplot(data=redData,mapping=aes(x=year,y=val))+
geom_point()
ggplot(data=redData,mapping=aes(x=year,y=val,group=cause))+
geom_point()
ggplot(data=redData,mapping=aes(x=year,y=val,group=cause))+
geom_line()
unique(redData$cause)
ggplot(data=redData,mapping=aes(x=year,y=val,group=cause,color=cause))+
geom_point()
head(redData)
ggplot(data=redData,mapping=aes(x=year,y=val,group=cause,color=cause))+
geom_point()+
facet_grid(rows=location)
ggplot(data=redData,mapping=aes(x=year,y=val,group=cause,color=cause))+
geom_point()+
facet_wrap(~location)
ggplot(data=redData,mapping=aes(x=year,y=val,group=location,color=location))+
geom_point()+
facet_wrap(~cause)
ggplot(data=redData,mapping=aes(x=year,y=val,group=location,color=location))+
geom_point()+
facet_wrap(~cause)+
guides(color=FALSE)
ggplot(data=redData,mapping=aes(x=year,y=val,group=location,color=location))+
geom_point()+
facet_wrap(~cause)+
guides(color='none')
ggplot(data=redData,mapping=aes(x=year,y=val,group=location,color=location))+
geom_jitter(width=.1)+
facet_wrap(~cause)+
guides(color='none')
summary(redData)
unique(redData$measure)
unique(redData$age)
unique(redData$sex)
unique(redData$metric)
ggplot(data=redData,mapping=aes(x=year,y=val,group=location,color=location))+
geom_jitter(width=.1)+
geom_line()+
facet_wrap(~cause)+
guides(color='none')
ggplot(data=redData,mapping=aes(x=year,y=val,group=location,color=location))+
geom_point(width=.1)+
geom_line()+
facet_wrap(~cause)+
guides(color='none')
ggplot(data=redData,mapping=aes(x=year,y=val,group=location,color=location))+
geom_point()+
geom_line()+
facet_wrap(~cause)+
guides(color='none')
head(redData)
?table
recData %>%
count(cause)
redData %>%
count(cause)
redData %>%
count(cause,location)
table(count~location,redData)
redData %>%
count(location~cause)
table(count~redData$location,redData$cause)
table(redData$location,redData$cause)
HIV= redData[redData$cause=='HIV/AIDS',]
table(HIV$year,HIV$location)
unique(redData$year)
HIV_tab= table(HIV$year,HIV$location)
HIV_tab
apply(HIV_tab,2,sum)
file1 %>%
group_by(cause) %>%
count(year)
file1 %>%
group_by(cause) %>%
summarize(n(unique(year))
file1 %>%
group_by(cause) %>%
summarize(length(unique(year))
file1 %>%
group_by(cause) %>%
n(year)
file1 %>%
group_by(cause) %>%
count(year)
file1 %>%
group_by(cause) %>%
unique(year)
file1 %>%
group_by(cause) %>%
n_distinct(year)
file1 %>%
group_by(cause) %>%
summarise(count= n_distinct(year))
file2= read.csv('./IHME-GBD_2019_DATA-18eb38e3-1/IHME-GBD_2019_DATA-18eb38e3-2.csv')
file2= read.csv('./IHME-GBD_2019_DATA-18eb38e3-2/IHME-GBD_2019_DATA-18eb38e3-2.csv')
head(file2)  #contains 32 causes
unique(file2$cause)
unique(file1$year)
unique(file2$year)
match(file1$cause,file2$cause)
match(unique(file1$cause),(unique(file2$cause))
match(unique(file1$cause),(unique(file2$cause)))
match(unique(file1$cause),unique(file2$cause))
colnames(file1)
unique(file2$cause) %in% unique(file1$cause)
sum(unique(file2$cause) %in% unique(file1$cause))/length(unique(file1$cause))
sum(unique(file2$location) %in% unique(file1$location))/length(unique(file1$location))
sum(unique(file2$year) %in% unique(file1$location))/length(unique(file1$year))
sum(unique(file2$year) %in% unique(file1$year))/length(unique(file1$year))
sum(unique(file2$age) %in% unique(file1$age))/length(unique(file1$age))
colnames(file1)
file10= read.csv('./IHME-GBD_2019_DATA-18eb38e3-10/IHME-GBD_2019_DATA-18eb38e3-10.csv')
sum(unique(file2$cause) %in% unique(file1$cause))/length(unique(file1$cause))
sum(unique(file2$location) %in% unique(file1$location))/length(unique(file1$location))
sum(unique(file2$year) %in% unique(file1$year))/length(unique(file1$year))
sum(unique(file10$cause) %in% unique(file1$cause))/length(unique(file1$cause))
sum(unique(file10$location) %in% unique(file1$location))/length(unique(file1$location))
sum(unique(file10$year) %in% unique(file1$year))/length(unique(file1$year))
sum(unique(file10$age) %in% unique(file1$age))/length(unique(file1$age))
getwd()
setwd('H:/My Drive/20230815_GlobBurdDisease/20230815_infectiousDiseases')
getwd()
setwd('H:/My Drive/20230815_GlobBurdDisease/20230815_infectiousDiseases')
getwd()
setwd('H:/My Drive/20230815_GlobBurdDisease/20230815_infectiousDiseases')
getwd
getwd()
file1= read.table(unz('IHME-GBD_2019_DATA-18eb38e3-1.zip','IHME-GBD_2019_DATA-18eb38e3-1.csv'),sep=',',header=TRUE)
head(file1)
allTime_HIV= data.frame(nrow=0)
for(i in 1:2){
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
}
allTime_HTZ= data.frame(nrow=0)
for(i in 1:2){
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
allTime_HTZ= rbind.data.frame(allTime_HTZ,
file_i[  file_i$age=='All ages' &
file_i$sex=='male' &
file_i$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
)
}
dim(allTime_HTZ)
i
head(file_i)
file_i[  file_i$age=='All ages' &
file_i$sex=='male' &
file_i$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
file_i[  file_i$age=='All ages', ]
file_i[  file_i$sex== 'male', ]
unique(file_i$sex)
allTime_HTZ= data.frame(nrow=0)
for(i in 1:2){
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
allTime_HTZ= rbind.data.frame(allTime_HTZ,
file_i[  file_i$age=='All ages' &
file_i$sex=='Male' &
file_i$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
)
}
dim(file1)
allTime_HTZ= data.frame(nrow=0,ncol=10)
for(i in 1:2){
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
allTime_HTZ= rbind.data.frame(allTime_HTZ,
file_i[  file_i$age=='All ages' &
file_i$sex=='Male' &
file_i$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
)
}
i=1
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
dim(file1)
i=1
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
dim(file_i)
i=1
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
dim(file_i)
allTime_HTZ= data.frame()
for(i in 1:2){
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
allTime_HTZ= rbind.data.frame(allTime_HTZ,
file_i[  file_i$age=='All ages' &
file_i$sex=='Male' &
file_i$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
)
}
dim(allTime_HTZ)
allTime_HTZ[489,]
rm(list= list(file_i))
?rm
rm(list= list('file_i'))
rm('file_i')
allTime_HTZ= data.frame()
for(i in 1:19){
file_i= read.table(unz(
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.zip',sep=''),
paste('IHME-GBD_2019_DATA-18eb38e3-',i,'.csv',sep='')),
sep=',',header=TRUE)
allTime_HTZ= rbind.data.frame(allTime_HTZ,
file_i[  file_i$age=='All ages' &
file_i$sex=='Male' &
file_i$cause %in% c("Tuberculosis","HIV/AIDS","Zika virus"),]
)
rm('file_i')  #free memory
}
dim(allTime_HTZ)
write.csv(allTime_HTZ,"20230822_allTime_HTZ.csv")
