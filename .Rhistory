DF_result_long= cbind.data.frame(
coef= c(DF_result$b1,DF_result$b2),
x= factor(c(rep(1,dim(DF_result)[1]),rep(2,dim(DF_result)[1])),levels=c(1,2)),
y= rep(1:dim(DF_result)[1],times=2),
correct= factor(c(DF_result$b1_correct,DF_result$b2_correct),levels=c(0,1)),
relErr= c(DF_result$b1_relErr,DF_result$b2_correct_relErr),
log10_recipRelErr= log(1/c(DF_result$b1_relErr,DF_result$b2_correct_relErr),10) #log10 of recip. relErr
)
ggplot()+
geom_point(data=DF_result_long,aes(x=x,y=y,color=correct,size=log10_recipRelErr))+
scale_color_manual(limits=as.character(c(0,1)),values=c('red','green'),labels=c('no','yes'))+
scale_size_continuous(breaks=log(1/c(0.01,0.1,0.3),10),labels=c(0.01,0.1,0.3),name='rel. Error')+
geom_text(data=DF_result_long,aes(x=as.numeric(x)-0.2,y=y, label=coef))+
theme_minimal()+
scale_x_discrete(breaks=c(1,2),labels=c('b1','b2'))+
theme(axis.title= element_blank(),axis.text.y=element_blank())
a0=2
t= 0:40 #match the actual data: 1 measurement per year for 40 years
t0= 25
coefDF= data.frame(
a1= c(0, 0.,  0.01,0.1),
a2= c(0,-0.01,0,   0)
)   #a1>=0, a2<=0
#dev.new(width=12,height=12,noRStudioGD = TRUE)
par(mfrow=c(nrow=ceiling(dim(coefDF)[1]/2),ncol=2),mar=c(3,3,1,0))
DF_result= data.frame(matrix(NA,nrow=dim(coefDF)[1],ncol=6))
colnames(DF_result)= c('b1','b2','b1_correct','b2_correct','b1_relErr', 'b2_relErr')
for(i in 1:dim(coefDF)[1]){
a1= coefDF$a1[i]; a2= coefDF$a2[i]
DF_result[i,c(1,2)]= c(a1,a2)
y_noNoise= a0 + a1*t + a2*ifelse(t>t0,t-t0,0)
noise= rnorm(length(t),mean=0,sd=0.1*abs(y_noNoise))  #noise relative to data
y= y_noNoise+noise
y[y<0]= 0   #make sure no negative values
plot(t,y,ylim=c(0,1.1*max(y)),main=paste('b1:',a1,', b2:',a2)) #change naming: 'a' are simulated, 'b' estimated params
DF1= twoLine_fit(t,y)
HDIlower_b1= HDIofMCMC(DF1$b1,credMass=.95)[1]  #lower bound of HDI -> diff. from 0?
b1_correct= ifelse(a1>0 & HDIlower_b1>0 | a1==0 & HDIlower_b1<=0,1,0) #b1 correctly classified
b1_relErr= abs(mean(DF1$b1)-a1)/abs(a1+1E3)  #relative error of mean estimate; w. flooring
HDIupper_b2= HDIofMCMC(DF1$b2,credMass=.95)[2]  #lower bound of HDI -> diff. from 0?
b2_correct= ifelse(a2<0 & HDIupper_b2<0 | a2==0 & HDIupper_b2>=0,1,0) #b2 correctly classified
b2_relErr= abs(mean(DF1$b2)-a2)/abs(a2+1E3)  #relative error of mean estimate
DF_result[i,3:6]= c(b1_correct,b2_correct,b1_relErr,b2_relErr)
lines(t, mean(DF1$b0) + mean(DF1$b1)*t + mean(DF1$b2) *ifelse(t>mean(DF1$t0),t-mean(DF1$t0),0), col='blue')
}
#manually reformat
DF_result_long= cbind.data.frame(
coef= c(DF_result$b1,DF_result$b2),
x= factor(c(rep(1,dim(DF_result)[1]),rep(2,dim(DF_result)[1])),levels=c(1,2)),
y= rep(1:dim(DF_result)[1],times=2),
correct= factor(c(DF_result$b1_correct,DF_result$b2_correct),levels=c(0,1)),
relErr= c(DF_result$b1_relErr,DF_result$b2_correct_relErr),
log10_recipRelErr= log(1/c(DF_result$b1_relErr,DF_result$b2_correct_relErr),10) #log10 of recip. relErr
)
ggplot()+
geom_point(data=DF_result_long,aes(x=x,y=y,color=correct,size=log10_recipRelErr))+
scale_color_manual(limits=as.character(c(0,1)),values=c('red','green'),labels=c('no','yes'))+
scale_size_continuous(breaks=log(1/c(0.01,0.1,0.3),10),labels=c(0.01,0.1,0.3),name='rel. Error')+
geom_text(data=DF_result_long,aes(x=as.numeric(x)-0.2,y=y, label=coef))+
theme_minimal()+
scale_x_discrete(breaks=c(1,2),labels=c('b1','b2'))+
theme(axis.title= element_blank(),axis.text.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
cat('\014')
graphics.off()
library('rjags')
library('tidyverse')
library('data.table')
library('dtw')  #time series clustering
source('H:/My Drive/20230815_GlobBurdDisease/DBDA2E-utilities_mod.R')  #modified to fit markdown
rm(list=ls())
cat('\014')
graphics.off()
library('rjags')
library('tidyverse')
library('data.table')
library('dtw')  #time series clustering
source('G:/My Drive/20230815_GlobBurdDisease/DBDA2E-utilities_mod.R')  #modified to fit markdown
allTime_HTZ= read.csv('G:/My Drive/20230815_GlobBurdDisease/20230823_Deaths_HTZ_21reg_MF_5year/IHME-GBD_2019_DATA-afd4b08e-1.csv',stringsAsFactors = TRUE)   #HTZ= "Tuberculosis","HIV/AIDS","Zika virus"
#limit to metric== 'Percent' and remove 'Number'
allTime_HTZ= allTime_HTZ[allTime_HTZ$metric=='Percent',]
dim(allTime_HTZ)
head(allTime_HTZ)
str(allTime_HTZ)
cause_location_tab= allTime_HTZ %>%
filter(measure=='Deaths' & sex=='Male' & age=='30-34 years' ) %>%
group_by(cause,location) %>%
summarise(count= n_distinct(year))
#all location - cause combinations should have 30 years
all(cause_location_tab$count == 30)
allTime_HTZ$disFac= as.numeric(as.factor(allTime_HTZ$cause))
dim(allTime_HTZ)
summary(allTime_HTZ$val)
summary(allTime_HTZ$year)
hist(allTime_HTZ$val,main='Disease percentages - all margins')
hist(allTime_HTZ$val,xlim=c(0,0.1),breaks= 200,main='Zoom: Disease percentages - all margins')
allTime_HTZ_asi= data.frame( allTime_HTZ %>%   #asi= age-, sex- independent
group_by(location,cause,disFac,year) %>%
summarize(val= mean(val)) )
head(allTime_HTZ_asi)
dim(allTime_HTZ_asi)
ggplot(data=allTime_HTZ_asi,mapping=aes(x=year,y=val,group=location,color=location))+
geom_point()+
geom_line()+
facet_wrap(~cause,scales='free_y')+
guides(color='none')
allTime_HTZ_asi_sums= allTime_HTZ_asi %>%
group_by(location,cause) %>%
summarize(sumPerc= sum(val))
allTime_HTZ_asi_sums[allTime_HTZ_asi_sums$sumPerc==0,]
allTime_HTZ_asi_norm= allTime_HTZ_asi %>%
group_by(location,cause,disFac) %>%
mutate(val_maxNorm= val/ifelse(max(val)>0,max(val),1) ) %>%
ungroup()
ggplot(data=allTime_HTZ_asi_norm,mapping=aes(x=year,y=val_maxNorm,group=location,color=location))+
geom_point()+
geom_line()+
theme(axis.title.y= element_text('Normalized to highest incidence year'))+
facet_wrap(~cause,scales='free_y')+
guides(color='none')
source('G:/My Drive/20230815_GlobBurdDisease/20230905_twoLine_fit.R')
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
dim( allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n()) )  #42 combinations
head(allTime_HT_asi)
twoLine_fit(t= twoLine_fit(t= allTime_HT_asi$year, y=allTime_HT_asi$val))
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
dim( allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n()) )  #42 combinations
head(allTime_HT_asi)
currDF= allTime_HT_asi[allTime_HT_asi$location=='Andean Latin America' & cause=='HIV/AIDS',]
head(allTime_HT_asi)
currDF= allTime_HT_asi[allTime_HT_asi$location=='Andean Latin America' & allTime_HT_asi$cause=='HIV/AIDS',]
twoLine_fit(t= twoLine_fit(t= currDF$year, y=currDF$val))
currDF$year
currDF$val
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val))
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val)
HDIlower_b1= HDIofMCMC(DF1$b1,credMass=.95)[1]  #lower bound of HDI -> diff. from 0?
HDIlower_b1= HDIofMCMC(mcmcDF$b1,credMass=.95)[1]  #lower bound of HDI -> diff. from 0?
HDIupper_b2= HDIofMCMC(mcmcDF$b2,credMass=.95)[2]  #upper bound of HDI -> diff. from 0?
HDIlower_b1
HDIupper_b2
dim( allTime_HT_asi %>%
group_by(location,cause)
allTime_HT_asi %>%
group_by(location,cause)
allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
groupedDF= allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
dim(groupedDF))  #42 combinations
dim(groupedDF) #42 combinations
upDownDeathrate_DF= data.frame()
upDownDeathrate_DF= data.frame(location=c(),cause=c())
upDownDeathrate_DF
source('G:/My Drive/20230815_GlobBurdDisease/20230905_twoLine_fit.R')
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
groupedDF= allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
dim(groupedDF) #42 combinations
head(allTime_HT_asi)
upDownDeathrate_DF= data.frame(location=c(),cause=c())
for(r in 1:dim(groupedDF)[1]){
currDF= allTime_HT_asi[allTime_HT_asi$location==groupedDF$location[i] &
allTime_HT_asi$cause==groupedDF$cause[i] ,]
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val)
HDIlower_b1= HDIofMCMC(mcmcDF$b1,credMass=.95)[1]  #lower bound of HDI -> greater than 0?
HDIupper_b2= HDIofMCMC(mcmcDF$b2,credMass=.95)[2]  #upper bound of HDI -> lower than 0?
if(HDIlower_b1>0 & HDIupper_b2<0){
upDownDeathrate_DF= rbind.data.frame(upDownDeathrate_DF,
c(groupedDF$location[i],groupedDF$cause[i]) )
}
}
source('G:/My Drive/20230815_GlobBurdDisease/20230905_twoLine_fit.R')
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
groupedDF= allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
dim(groupedDF) #42 combinations
head(allTime_HT_asi)
upDownDeathrate_DF= data.frame(location=c(),cause=c())
for(i in 1:dim(groupedDF)[1]){
currDF= allTime_HT_asi[allTime_HT_asi$location==groupedDF$location[i] &
allTime_HT_asi$cause==groupedDF$cause[i] ,]
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val)
HDIlower_b1= HDIofMCMC(mcmcDF$b1,credMass=.95)[1]  #lower bound of HDI -> greater than 0?
HDIupper_b2= HDIofMCMC(mcmcDF$b2,credMass=.95)[2]  #upper bound of HDI -> lower than 0?
if(HDIlower_b1>0 & HDIupper_b2<0){
upDownDeathrate_DF= rbind.data.frame(upDownDeathrate_DF,
c(groupedDF$location[i],groupedDF$cause[i]) )
}
}
upDownDeathrate_DF
groupedDF$location[i]
groupedDF$cause[i]
DeathrateDown_DF
DeathrateDown_DF= data.frame(location=c(),cause=c())
DeathrateDown_DF
rbind.data.frame(DeathrateDown_DF,
c(groupedDF$location[i],groupedDF$cause[i]) )
groupedDF$location[i]
DeathrateDown_DF
rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i])) )
rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i])) )
DeathrateDown_DF
rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i])) )
DeathrateDown_DF= rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i])) )
DeathrateDown_DF
DeathrateDown_DF= rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i])) )
DeathrateDown_DF
source('G:/My Drive/20230815_GlobBurdDisease/20230905_twoLine_fit.R')
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
groupedDF= allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
dim(groupedDF) #42 combinations
head(allTime_HT_asi)
DeathrateDown_DF= data.frame(location=c(),cause=c(),b1_median=c(),b2_median=c(),t_inflec_median=c())
for(i in 1:dim(groupedDF)[1]){
print(paste(i,'of',dim(groupedDF)[i]))
currDF= allTime_HT_asi[allTime_HT_asi$location==groupedDF$location[i] &
allTime_HT_asi$cause==groupedDF$cause[i] ,]
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val)
HDIlower_b1= HDIofMCMC(mcmcDF$b1,credMass=.95)[1]  #lower bound of HDI -> greater than 0?
HDIupper_b2= HDIofMCMC(mcmcDF$b2,credMass=.95)[2]  #upper bound of HDI -> lower than 0?
if(HDIupper_b2<0){
DeathrateDown_DF= rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i]),
median(mcmcDF$b1),median(mcmcDF$b2),median(mcmcDF$t0)) )
}
}
DeathrateDown_DF
colnames(DeathrateDown_DF)= c('location','cause','b1_median','b2_median','t_inflec_median')
DeathrateDown_DF
i=1
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()
for(i in 1:dim(DeathrateDown_DF)[1]){
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()
}
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()
for(i in 1:dim(DeathrateDown_DF)[1]){
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()
}
for(i in 1:dim(DeathrateDown_DF)[1]){
print(
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()
)
}
for(i in 1:dim(DeathrateDown_DF)[1]){
print(
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()+
scale_y_continuous(limits=c(0,0.1))+
geom_title(paste(DeathrateDown_DF$cause[i],'',DeathrateDown_DF$location[i]))
)
}
for(i in 1:dim(DeathrateDown_DF)[1]){
print(
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()+
scale_y_continuous(limits=c(0,0.1))+
ggtitle(paste(DeathrateDown_DF$cause[i],'',DeathrateDown_DF$location[i]))
)
}
allTime_HT_asi$cause=='HIV/AIDS ]
allTime_HT_asi[allTime_HT_asi$location=='Eastern Subsaharan Africa' &
allTime_HT_asi[allTime_HT_asi$location=='Eastern Sub-Saharan Africa' &
allTime_HT_asi$cause=='HIV/AIDS', ]
for(i in 1:dim(DeathrateDown_DF)[1]){
print(
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()+
scale_y_continuous(limits=c(0,0.1))+
ggtitle(paste(DeathrateDown_DF$cause[i],'',DeathrateDown_DF$location[i]))
)
}
for(i in 1:dim(DeathrateDown_DF)[1]){
print(
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()+
scale_y_continuous(limits=c(0,0.2))+
ggtitle(paste(DeathrateDown_DF$cause[i],'',DeathrateDown_DF$location[i]))
)
}
for(i in 1:dim(DeathrateDown_DF)[1]){
print(
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()+
#scale_y_continuous(limits=c(0,0.25))+
ggtitle(paste(DeathrateDown_DF$cause[i],'',DeathrateDown_DF$location[i]))
)
}
dim(DeathrateDown_DF)
heatmap(DeathrateDown_DF[,c(3,4)])
heatmap(as.matrix(DeathrateDown_DF[,c(3,4)]))
as.matrix(DeathrateDown_DF[,c(3,4)])
str(DeathrateDown_DF)
str(mcmcDF)
median(mcmcDF$b1)
str(DeathrateDown_DF)
source('G:/My Drive/20230815_GlobBurdDisease/20230905_twoLine_fit.R')
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
groupedDF= allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
dim(groupedDF) #42 combinations
head(allTime_HT_asi)
DeathrateDown_DF= data.frame()
for(i in 1:dim(groupedDF)[1]){
print(paste(i,'of',dim(groupedDF)[1]))
currDF= allTime_HT_asi[allTime_HT_asi$location==groupedDF$location[i] &
allTime_HT_asi$cause==groupedDF$cause[i] ,]
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val)
HDIlower_b1= HDIofMCMC(mcmcDF$b1,credMass=.95)[1]  #lower bound of HDI -> greater than 0?
HDIupper_b2= HDIofMCMC(mcmcDF$b2,credMass=.95)[2]  #upper bound of HDI -> lower than 0?
if(HDIupper_b2<0){
DeathrateDown_DF= rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i]),
median(mcmcDF$b1),median(mcmcDF$b2),median(mcmcDF$t0)) )
}
}
colnames(DeathrateDown_DF)= c('location','cause','b1_median','b2_median','t_inflec_median')
str(DeathrateDown_DF)
dim(DeathrateDown_DF)
source('G:/My Drive/20230815_GlobBurdDisease/20230905_twoLine_fit.R')
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
groupedDF= allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
dim(groupedDF) #42 combinations
head(allTime_HT_asi)
DeathrateDown_DF= data.frame()
for(i in 1:dim(groupedDF)[1]){
print(paste(i,'of',dim(groupedDF)[1]))
currDF= allTime_HT_asi[allTime_HT_asi$location==groupedDF$location[i] &
allTime_HT_asi$cause==groupedDF$cause[i] ,]
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val)
HDIlower_b1= HDIofMCMC(mcmcDF$b1,credMass=.95)[1]  #lower bound of HDI -> greater than 0?
HDIupper_b2= HDIofMCMC(mcmcDF$b2,credMass=.95)[2]  #upper bound of HDI -> lower than 0?
if(HDIupper_b2<0){
DeathrateDown_DF= rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i]),
as.numeric(median(mcmcDF$b1)),as.numeric(median(mcmcDF$b2)),
as.numeric(median(mcmcDF$t0))) )
}
}
colnames(DeathrateDown_DF)= c('location','cause','b1_median','b2_median','t_inflec_median')
str(DeathrateDown_DF)
dim(DeathrateDown_DF)
DeathrateDown_DF$b0= as.numeric(DeathrateDown_DF$b0)
DeathrateDown_DF$b0
DeathrateDown_DF$b0_median= as.numeric(DeathrateDown_DF$b0_median)
DeathrateDown_DF$b0_median
DeathrateDown_DF$b0_median= as.numeric(DeathrateDown_DF$b1_median)
DeathrateDown_DF$b1_median= as.numeric(DeathrateDown_DF$b2_median)
DeathrateDown_DF$t_inflec_median= as.numeric(DeathrateDown_DF$t_inflec_median)
str(DeathrateDown_DF)
source('G:/My Drive/20230815_GlobBurdDisease/20230905_twoLine_fit.R')
allTime_HT_asi= allTime_HTZ_asi[allTime_HTZ_asi$cause %in% c('HIV/AIDS','Tuberculosis'),]
groupedDF= allTime_HT_asi %>%
group_by(location,cause) %>%
summarize(n())
dim(groupedDF) #42 combinations
head(allTime_HT_asi)
DeathrateDown_DF= data.frame()
for(i in 1:dim(groupedDF)[1]){
print(paste(i,'of',dim(groupedDF)[1]))
currDF= allTime_HT_asi[allTime_HT_asi$location==groupedDF$location[i] &
allTime_HT_asi$cause==groupedDF$cause[i] ,]
mcmcDF= twoLine_fit(t= currDF$year, y=currDF$val)
HDIlower_b1= HDIofMCMC(mcmcDF$b1,credMass=.95)[1]  #lower bound of HDI -> greater than 0?
HDIupper_b2= HDIofMCMC(mcmcDF$b2,credMass=.95)[2]  #upper bound of HDI -> lower than 0?
if(HDIupper_b2<0){
DeathrateDown_DF= rbind.data.frame(DeathrateDown_DF,
c(as.character(groupedDF$location[i]),as.character(groupedDF$cause[i]),
as.numeric(median(mcmcDF$b1)),as.numeric(median(mcmcDF$b2)),
as.numeric(median(mcmcDF$t0))) )
}
}
colnames(DeathrateDown_DF)= c('location','cause','b1_median','b2_median','t_inflec_median')
str(DeathrateDown_DF)
dim(DeathrateDown_DF)
DeathrateDown_DF$b1_median= as.numeric(DeathrateDown_DF$b1_median)
DeathrateDown_DF$b2_median= as.numeric(DeathrateDown_DF$b2_median)
DeathrateDown_DF$t_inflec_median= as.numeric(DeathrateDown_DF$t_inflec_median)
str(DeathrateDown_DF)
DeathrateDown_DF$b1_median= as.numeric(DeathrateDown_DF$b1_median)
DeathrateDown_DF$b2_median= as.numeric(DeathrateDown_DF$b2_median)
DeathrateDown_DF$t_inflec_median= as.numeric(DeathrateDown_DF$t_inflec_median)
str(DeathrateDown_DF)
for(i in 1:dim(DeathrateDown_DF)[1]){
print(
ggplot(data=allTime_HT_asi[allTime_HT_asi$location==DeathrateDown_DF$location[i] &
allTime_HT_asi$cause==DeathrateDown_DF$cause[i],  ],
mapping=aes(x=year,y=val))+
geom_point()+
geom_line()+
#scale_y_continuous(limits=c(0,0.25))+
ggtitle(paste(DeathrateDown_DF$cause[i],'',DeathrateDown_DF$location[i]))
)
}
heatmap(as.matrix(DeathrateDown_DF[,c(3,4)]))
as.matrix(DeathrateDown_DF[,c(3,4)])
heatmap(as.matrix(DeathrateDown_DF[,c(3,4)]))
?heatmap.2
library('heatmap.2')
?heatmap
heatmap(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none')
as.matrix(DeathrateDown_DF[,c(3,4)])
summary(DeathrateDown_DF[,c(3,4)]))
summary(DeathrateDown_DF[,c(3,4)])
head(allTime_HTZ_asi_norm)
allTime_HIV_asi_norm= allTime_HTZ_asi_norm[allTime_HTZ_asi_norm$cause=='HIV/AIDS',]
HIV_wide= allTime_HIV_asi_norm %>%
mutate(year= as.factor(year)) %>%
select(location,year,val)%>%
pivot_wider(names_from= year,values_from= val)
loc_labels= as.character(HIV_wide$location)
HIV_mtx= as.matrix(HIV_wide[,2:dim(HIV_wide)[2]])
#cluster timecourses
distMtx= dist(HIV_mtx,method='dtw')  #"dynamic time warping"
hc= hclust(distMtx,method='average')  #
plot(hc)  #,labels=loc_labels
#cut into three groups
dendroInd= cutree(hc,k=3)
allTime_HIV_asi_norm$dendGrp= dendroInd[match(allTime_HIV_asi_norm$location,loc_labels)]
ggplot(data=allTime_HIV_asi_norm[allTime_HIV_asi_norm$dendGrp ==1,], mapping=aes(x=year,y=val_maxNorm,color=location))+
geom_point()+
geom_line()+
coord_cartesian(ylim=c(0,1))+
theme(axis.title.y= element_text('Normalized to highest incidence year'))
ggplot(data=allTime_HIV_asi_norm[allTime_HIV_asi_norm$dendGrp %in% c(2,3),], mapping=aes(x=year,y=val_maxNorm,color=location))+
geom_point()+
geom_line()+
coord_cartesian(ylim=c(0,1))+
theme(axis.title.y= element_text('Normalized to highest incidence year'))
# ggplot(data=allTime_HIV_asi_norm[allTime_HIV_asi_norm$dendGrp==3,], mapping=aes(x=year,y=val_maxNorm,color=location))+
#   geom_point()+
#   geom_line()+
#   coord_cartesian(ylim=c(0,1))+
#   theme(axis.title.y= element_text('Normalized to highest incidence year'))
?heatmap.2
library('gplots')
install.packages('gplots')
library('gplots')
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none')
?heatmap.2
DeathrateDown_DF[,c(3,4)])
DeathrateDown_DF[,c(3,4)]
summary(DeathrateDown_DF[,c(3,4)])
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none')
DeathrateDown_DF[,c(3,4)]
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none',Colv=FALSE)
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none',Colv=FALSE,
cexCol=1,srtRow=0)
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none',Colv=FALSE,
cexCol=1,srtRow=90)
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none',Colv=FALSE,
cexCol=1,srtCol=90)
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none',Colv=FALSE,
dendrogram='row',
cexCol=1,srtCol=90)
heatmap.2(as.matrix(DeathrateDown_DF[,c(3,4)]),scale='none',Colv=FALSE,
dendrogram='row',
cexCol=1,srtCol=0)
